
package org.eclipse.daanse.xmla_ws;

import java.net.MalformedURLException;
import java.net.URL;
import javax.xml.namespace.QName;
import jakarta.xml.ws.Service;
import jakarta.xml.ws.WebEndpoint;
import jakarta.xml.ws.WebServiceClient;
import jakarta.xml.ws.WebServiceException;
import jakarta.xml.ws.WebServiceFeature;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 4.0.0-M3
 * Generated source version: 3.0
 * 
 */
@WebServiceClient(name = "MsXmlAnalysisService", targetNamespace = "urn:daanse-eclipse-org:xmla-ws", wsdlLocation = "file:/home/stbischof/dev/git/org.eclipse.daanse.xmla/org.eclipse.daanse.xmla.definition/xmla.wsdl")
public class MsXmlAnalysisService
    extends Service
{

    private final static URL MSXMLANALYSISSERVICE_WSDL_LOCATION;
    private final static WebServiceException MSXMLANALYSISSERVICE_EXCEPTION;
    private final static QName MSXMLANALYSISSERVICE_QNAME = new QName("urn:daanse-eclipse-org:xmla-ws", "MsXmlAnalysisService");

    static {
        URL url = null;
        WebServiceException e = null;
        try {
            url = new URL("file:/home/stbischof/dev/git/org.eclipse.daanse.xmla/org.eclipse.daanse.xmla.definition/xmla.wsdl");
        } catch (MalformedURLException ex) {
            e = new WebServiceException(ex);
        }
        MSXMLANALYSISSERVICE_WSDL_LOCATION = url;
        MSXMLANALYSISSERVICE_EXCEPTION = e;
    }

    public MsXmlAnalysisService() {
        super(__getWsdlLocation(), MSXMLANALYSISSERVICE_QNAME);
    }

    public MsXmlAnalysisService(WebServiceFeature... features) {
        super(__getWsdlLocation(), MSXMLANALYSISSERVICE_QNAME, features);
    }

    public MsXmlAnalysisService(URL wsdlLocation) {
        super(wsdlLocation, MSXMLANALYSISSERVICE_QNAME);
    }

    public MsXmlAnalysisService(URL wsdlLocation, WebServiceFeature... features) {
        super(wsdlLocation, MSXMLANALYSISSERVICE_QNAME, features);
    }

    public MsXmlAnalysisService(URL wsdlLocation, QName serviceName) {
        super(wsdlLocation, serviceName);
    }

    public MsXmlAnalysisService(URL wsdlLocation, QName serviceName, WebServiceFeature... features) {
        super(wsdlLocation, serviceName, features);
    }

    /**
     * 
     * @return
     *     returns MsXmlAnalysisSoapPortType
     */
    @WebEndpoint(name = "MsXmlAnalysisSoapPort")
    public MsXmlAnalysisSoapPortType getMsXmlAnalysisSoapPort() {
        return super.getPort(new QName("urn:daanse-eclipse-org:xmla-ws", "MsXmlAnalysisSoapPort"), MsXmlAnalysisSoapPortType.class);
    }

    /**
     * 
     * @param features
     *     A list of {@link jakarta.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns MsXmlAnalysisSoapPortType
     */
    @WebEndpoint(name = "MsXmlAnalysisSoapPort")
    public MsXmlAnalysisSoapPortType getMsXmlAnalysisSoapPort(WebServiceFeature... features) {
        return super.getPort(new QName("urn:daanse-eclipse-org:xmla-ws", "MsXmlAnalysisSoapPort"), MsXmlAnalysisSoapPortType.class, features);
    }

    private static URL __getWsdlLocation() {
        if (MSXMLANALYSISSERVICE_EXCEPTION!= null) {
            throw MSXMLANALYSISSERVICE_EXCEPTION;
        }
        return MSXMLANALYSISSERVICE_WSDL_LOCATION;
    }

}
